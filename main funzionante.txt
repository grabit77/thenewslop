##mainfunzionante
import re
import os
import requests
import asyncio
from dotenv import load_dotenv
from telethon import TelegramClient
from fastapi import FastAPI
from fastapi.responses import HTMLResponse
from openai import OpenAI

load_dotenv()

# Config
api_id = int(os.getenv("TELEGRAM_API_ID"))
api_hash = os.getenv("TELEGRAM_API_HASH")
channel_username = os.getenv("TELEGRAM_CHANNEL")

client_openai = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
HORDE_API_KEY = os.getenv("HORDE_API_KEY", "0000000000")
HORDE_URL = "https://stablehorde.net/api/v2/generate/async"

client = TelegramClient("session_session", api_id, api_hash)
app = FastAPI()


# ---- Utility ----
def remove_emoji(text: str) -> str:
    emoji_pattern = re.compile(
        "["
        "\U0001F600-\U0001F64F"  # emoticons
        "\U0001F300-\U0001F5FF"  # simboli e pictogrammi
        "\U0001F680-\U0001F6FF"  # trasporti e mappe
        "\U0001F1E0-\U0001F1FF"  # bandiere (iOS)
        "\U00002700-\U000027BF"  # simboli dingbat
        "\U000024C2-\U0001F251" 
        "]+", flags=re.UNICODE)
    return emoji_pattern.sub(r'', text)

async def get_latest_news_titles():
    await client.start()
    messages = await client.get_messages(channel_username, limit=2)
    cleaned = []
    for m in messages:
        if m.message:
            cleaned.append(remove_emoji(m.message).strip())
    return cleaned


async def generate_prompt(titles) -> str:
    prompt_text = (
        "Scrivi il prompt di massimo 1000 caratteri in inglese per generare un immagine che rifletta la crudeltà umana, ricca di personaggi che fanno cose basato su queste news"
        "lo stile grafico deve rispettare la gravità delle notizie, serio e SEMPRE FOTOREALISTICO\n" + "\n".join(titles)
    )

    response = client_openai.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt_text}],
    )

    return response.choices[0].message.content.strip()


async def generate_image_stable_horde(prompt: str) -> str:
    payload = {
        "prompt": prompt,
        "params": {"width": 512, "height": 512, "steps": 20},
        "nsfw": False,
        "censor_nsfw": True,
    }
    headers = {"apikey": HORDE_API_KEY, "Client-Agent": "TelegramNewsAI:1.0"}

    res = requests.post(HORDE_URL, json=payload, headers=headers)
    if res.status_code != 202:
        print("Errore Stable Horde:", res.text)
        return None

    job_id = res.json().get("id")
    print(f"✅ Job inviato a Stable Horde: {job_id}")

    while True:
        status = requests.get(f"https://stablehorde.net/api/v2/generate/status/{job_id}")
        data = status.json()

        if data.get("done"):
            gens = data.get("generations", [])
            if gens:
                return gens[0]["img"]
            break

        await asyncio.sleep(5)

    return None


# ---- ROUTE PRINCIPALE ----
@app.get("/", response_class=HTMLResponse)
async def index():
    titles = await get_latest_news_titles()
    prompt = await generate_prompt(titles)
    image_url = await generate_image_stable_horde(prompt)

    # HTML con un po' di CSS
    html = f"""
    <html>
    <head>
        <title>News & AI Art</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                background: black;
                padding: 20px;
                text-align: center;
            }}
            .card {{
                background: black;
                padding: 20px;
                margin: 20px auto;
                border-radius: 12px;
                max-width: 700px;
                color:white;
                text-align:center;
            }}
            h1 {{ color: #fff; }}
            ul {{ text-align: left; }}
            img {{
                margin-top: 20px;
                max-width: 100%;
                border-radius: 0px;
            }}
        </style>
    </head>
    <body>
        <div class="card">
            {"<img src='"+image_url+"' />" if image_url else "<p><b>Errore: immagine non generata</b></p>"}
        </div>
        <div class="card">
            <h1>Notizie</h1>
            <ul>
                {''.join(f'<li>{t}</li>' for t in titles)}
            </ul>
        </div>

        <div class="card">
            <h2>Prompt</h2>
            <p>{prompt}</p>
        </div>
    </body>
    </html>
    """

    return html

